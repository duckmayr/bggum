% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggumMC3.R
\name{ggumMC3}
\alias{ggumMC3}
\title{GGUM MC3}
\usage{
ggumMC3(data, sample_iterations = 10000, burn_iterations = 10000,
  sd_tune_iterations = 5000, temp_tune_iterations = 5000,
  temp_n_draws = 2500, swap_interval = 1, flip_interval = NA,
  n_temps = length(temps), temps = NULL, optimize_temps = TRUE,
  temp_multiplier = 0.1, proposal_sds = NULL, theta_init = NULL,
  alpha_init = NULL, delta_init = NULL, tau_init = NULL,
  theta_prior_params = c(0, 1), alpha_prior_params = c(1.5, 1.5, 0.25, 4),
  delta_prior_params = c(2, 2, -5, 5), tau_prior_params = c(2, 2, -6, 6))
}
\arguments{
\item{data}{A numeric matrix giving the individuals' responses}

\item{sample_iterations}{A vector of length one giving the number of
iterations the sampler should complete (default is 10000)}

\item{burn_iterations}{A vector of length one giving the number of
iterations to burn in (default is 10000)}

\item{sd_tune_iterations}{A numeric vector of length one; the number of
iterations to use to tune the proposals before the burn-in period
begins (default is 5000). If 0 is given, the proposals are not tuned.}

\item{temp_tune_iterations}{A numeric vector of length one; if a temperature
schedule is not provided in the \code{temps} argument and 
\code{optimize_temps} = TRUE, \code{temp_tune_iterations} gives the number
of iterations to use to tune each temperature before the burn-in period
begins (default is 5000) -- see \code{\link{tune_temperatures}}}

\item{temp_n_draws}{A numeric vector of length one; if a temperature
schedule is not provided in the \code{temps} argument and 
\code{optimize_temps} = TRUE, \code{temp_n_draws} gives the number
of draws from the temperature finding algorithm to calculate each
temperature (default is 2500) -- see \code{\link{tune_temperatures}}}

\item{swap_interval}{The period by which to attempt chain swaps;
e.g. if swap_interval = 100, a state swap will be proposed between two
adjacent chains every 100 iterations (default is 1)}

\item{flip_interval}{(Optional) If given, provides the number of iterations
after which the sign of the thetas and deltas should be changed.
For example, if \code{flip_interval = 1000},
every 1000 iterations the theta and delta parameters will be multiplied
by -1 (a valid parameter value change as discussed in Geyer (1991)).}

\item{n_temps}{The number of chains; should only be given if \code{temps}
is not specified}

\item{temps}{(Optional) A numeric vector giving the temperatures;
if not provided and \code{optimize_temps = FALSE}, each temperature T_t
for t > 1 is given by 1 + \code{temp_multiplier} * (t-1), and T_1 = 1,
while if \code{optimize_temps = TRUE}, the temperature schedule is
determined according to an optimal temperature finding algorithm
-- see \code{\link{tune_temperatures}}}

\item{optimize_temps}{A logical vector of length one; if TRUE and a
temperature schedule is not provided in the \code{temps} argument,
an algorithm is run to determine the optimal temperature schedule
(default is TRUE) -- see \code{\link{tune_temperatures}}}

\item{temp_multiplier}{A numeric vector of length one; if a temperature
schedule is not provided and \code{optimize_temps = FALSE}, 
controls the differences between temperatures as described in the
description of the \code{temps} argument (default is 0.1)}

\item{proposal_sds}{(Optional) A list of length four where is element is a
numeric vector giving standard deviations for the proposals;
the first element should be a numeric vector with a standard deviation
for the proposal for each respondent's theta parameter (the latent trait),
the second a vector with a standard deviation for each item's alpha
(discrimination) parameter, the third a vector with a standard deviation
for each item's delta (location) parameter, and the fourth a vector with
a standard deviation for each item's tau (option threshold) parameters.
If not given, the standard deviations are all set to 1.0 before any
tuning begins.}

\item{theta_init}{(Optional) Either a numeric vector giving an initial value
for each respondent's theta parameter, or a numeric matrix giving an
initial value for each respondent's theta parameter for each parallel chain;
if not given, the initial values are drawn from the prior distribution}

\item{alpha_init}{(Optional) Either a numeric vector giving an initial value
for each item's alpha parameter, or a numeric matrix giving an
initial value for each item's alpha parameter for each parallel chain;
if not given, the initial values are drawn from the prior distribution}

\item{delta_init}{(Optional) Either a numeric vector giving an initial value
for each item's delta parameter, or a numeric matrix giving an
initial value for each item's delta parameter for each parallel chain;
if not given, the initial values are drawn from the prior distribution}

\item{tau_init}{(Optional) Either a list giving an initial value
for each item's tau vector, or a list of lists giving an
initial value for each item's tau vector for each parallel chain;
if not given, the initial values are drawn from the prior distribution}

\item{theta_prior_params}{A numeric vector of length two;
the mean and standard deviation of theta parameters' prior distribution
(where the theta parameters have a normal prior; the default is 0 and 1)}

\item{alpha_prior_params}{A numeric vector of length four;
the two shape parameters and a and b values for alpha parameters' prior
distribution (where the alpha parameters have a four parameter beta prior;
the default is 1.5, 1.5, 0.25, and 4)}

\item{delta_prior_params}{A numeric vector of length four;
the two shape parameters and a and b values for delta parameters' prior
distribution (where the delta parameters have a four parameter beta prior;
the default is 2, 2, -5, and 5)}

\item{tau_prior_params}{A numeric vector of length four;
the two shape parameters and a and b values for tau parameters' prior
distribution (where the tau parameters have a four parameter beta prior;
the default is 2, 2, -6, and 6)}
}
\value{
A numeric matrix giving the parameter values at each iteration
  for the cold chain
}
\description{
Metropolis Coupled Markov Chain Monte Carlo Sampling for the GGUM
}
\seealso{
\code{\link{ggumProbability}}, \code{\link{ggumMCMC}},
  \code{\link{tune_temperatures}}
}
